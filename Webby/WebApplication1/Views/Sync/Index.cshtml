<body>
    <!-- Main Content -->
    <div class="container">
        <div class="row">
            <div class="col-md-8" id="diviFramePart">
                <div id="player"></div>
            </div>
            <div class="col-md-4">
                <div id="divUrlList">
                    <div class="row scrollList" id="searchResults">
                        <ul class="list-group" id="urlListUL">
                            @foreach (var item in Model.UrlList)
                            {
                                <li class="list-group-item">@item.UrlPart</li>
                            }
                        </ul>

                    </div>
                </div>
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1">
                <input class="form-control"  type="text" id="url" />
                <input class="btn btn-default" type="button" id="sendurl" value="Add url" />
                <input class="btn btn-default" type="button" id="nexturl" value="Next url"/>
            </div>
        </div>

        <div class="row">
            <div class="col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1">
                <div class="post-preview">
                    <a href="#">
                        <h2 class="post-title">
                            Derp Derp Derp Derp
                        </h2>
                        <h3 class="post-subtitle">
                            some bullshit "small text that is included in ehader"
                        </h3>
                    </a>
                    <p class="post-meta">Posted by <a href="#">MEtadate as fuck</a>lol</p>
                </div>
                <hr>
            </div>
        </div>
    </div>
    <hr>
</body>
@section scripts {
    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.2.0.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.-->

    <script>
        var syncer = $.connection.syncHub;
        $(function () {
            // Reference the auto-generated proxy for the hub.
            

            // CLIENT SIDE FUNCTIONS (USED BY HUB)
            syncer.client.addUrl = function (url) {
                // Add the url to list.
                $('#urlListUL').append('<li class="list-group-item">' + htmlEncode(url) + '</li>');
            };

            syncer.client.nextUrl = function (returnUrl) {
                player.stopVideo();
                player.loadVideoById(returnUrl);
            };

            syncer.client.goToTime = function (time, version) {
                console.log("GO TO TIME" + version);
                GlobalRowV = version;
                player.seekTo(time);
            };

            // Start the connection.
            $.connection.hub.start().done(function () {
                $('#sendurl').click(function () {
                    // Call the Send method on the hub.
                    syncer.server.addUrl($('#url').val());
                    // Clear text box and reset focus for next comment.
                    $('#url').val('');
                });
                $('#nexturl').click(function () {
                    syncer.server.nextUrl();
                });


            });
        });

        // Helper Functions
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }


        var GlobalRowV = "@Model.RowVersion";
        var CurrentUrl = "@Model.UrlCurrent";
        var CurrentTime = "@Model.CurrentTime";
        var HasSynced = true;

        //syncer.server.goToTime(player.getCurrentTime());

        /**** YOUTUBE FUNCTIONS ****/
        var player;
        function onYouTubeIframeAPIReady() {
            player = new YT.Player('player', {
                height: '400',
                width: '640',
                videoId: CurrentUrl,
                events: {
                    'onReady': onPlayerReady,
                    'onStateChange': onPlayerStateChange
                }
            });
        }

        function onPlayerReady(event) {
            event.target.playVideo();
        }

        function onPlayerStateChange(event) {
            if (event.data == YT.PlayerState.ENDED) {
                syncer.server.nextUrl();
            }
            if (event.data == YT.PlayerState.PLAYING) {
                syncer.server.goToTime(player.getCurrentTime(), GlobalRowV);
                //player.seekTo(CurrentTime);
            }
        }

        /*********************** Load JewTube APi ********************************/
        if (typeof youtube_api_init == 'undefined') {
            var tag = document.createElement('script');
            tag.src = "https://www.youtube.com/iframe_api";
            var firstScriptTag = document.getElementsByTagName('script')[0];
            firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);
            var youtube_api_init = 1;
        }

</script>
}
